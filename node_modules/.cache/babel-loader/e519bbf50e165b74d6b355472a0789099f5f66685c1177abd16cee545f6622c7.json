{"ast":null,"code":"var _jsxFileName = \"/Users/andrewnguyen/Desktop/3390/src/App.js\";\n//import logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_URL } from './api';\nimport { WEATHER_API_KEY } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  const handleOnSearchChnage = searchData => {\n    _s();\n    //console.log(searchData);\n    //latitude and longitude\n    const [lat, lon] = searchData.value.split(\" \");\n    //                                                    onecall\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [forecast, setForecast] = useState(null);\n\n    //pass the API being fetched to arrays \n    Promise.all([currentWeatherFetch, forecastFetch])\n    //Mapping the response of the API to the component with json \n    .then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    });\n  };\n  _s(handleOnSearchChnage, \"WWp4biUQ6yxZ26omAvrL3l/oQ6o=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"Weather Application \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChnage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","handleOnSearchChnage","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","currentWeather","setCurrentWeather","useState","forecast","setForecast","Promise","all","then","response","weatherResponse","json","forcastResponse","city","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchChange","_c","$RefreshReg$"],"sources":["/Users/andrewnguyen/Desktop/3390/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport Search from './components/search/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_URL } from './api';\nimport { WEATHER_API_KEY } from './api';\n\nfunction App() {\n\n  const handleOnSearchChnage = (searchData) => {  \n    //console.log(searchData);\n    //latitude and longitude\n    const [lat, lon] = searchData.value.split(\" \");\n    //                                                    onecall\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n  \n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [forecast, setForecast] = useState(null);\n\n    //pass the API being fetched to arrays \n    Promise.all([currentWeatherFetch, forecastFetch])\n    //Mapping the response of the API to the component with json \n    .then(async (response) => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n\n      setCurrentWeather({ city: searchData.label, ...weatherResponse });\n      setForecast({ city: searchData.label, ...forcastResponse });\n    })\n  };\n\n  return (\n    <div className=\"container\">\n       <p className=\"title\">Weather Application </p>\n      <Search onSearchChange={handleOnSearchChnage}/>\n      <CurrentWeather/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,cAAc,MAAM,8CAA8C;AACzE,SAASC,eAAe,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEb,MAAMC,oBAAoB,GAAIC,UAAU,IAAK;IAAAH,EAAA;IAC3C;IACA;IACA,MAAM,CAACI,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAC9C;IACA,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAEd,eAAgB,gBAAeS,GAAI,QAAOC,GAAI,UAAST,eAAgB,EAAC,CAAC;IAE9G,MAAMc,aAAa,GAAGD,KAAK,CAAE,GAAEd,eAAgB,iBAAgBS,GAAI,QAAOC,GAAI,UAAST,eAAgB,eAAc,CAAC;IAEtH,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;IAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;;IAE9C;IACAG,OAAO,CAACC,GAAG,CAAC,CAACT,mBAAmB,EAAEE,aAAa,CAAC;IAChD;IAAA,CACCQ,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAChD,MAAMC,eAAe,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAEhDT,iBAAiB,CAAC;QAAEW,IAAI,EAAEpB,UAAU,CAACqB,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEL,WAAW,CAAC;QAAEQ,IAAI,EAAEpB,UAAU,CAACqB,KAAK;QAAE,GAAGF;MAAgB,CAAC,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC;EAACtB,EAAA,CAtBIE,oBAAoB;EAwB1B,oBACEJ,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACvB5B,OAAA;MAAG2B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC9ChC,OAAA,CAACL,MAAM;MAACsC,cAAc,EAAE7B;IAAqB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC/ChC,OAAA,CAACJ,cAAc;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAEV;AAACE,EAAA,GAjCQjC,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}